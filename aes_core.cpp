#include "aes_core.h"
const unsigned char Rcon[11] = { 0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36 };
const unsigned char h_Sbox[256] = {
	0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
	0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
	0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
	0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
	0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
	0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
	0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
	0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
	0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
	0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
	0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
	0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
	0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
	0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
	0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
	0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 };

static const unsigned int DecryptT0[256] = {
	0x51f4a750U, 0x7e416553U, 0x1a17a4c3U, 0x3a275e96U,
	0x3bab6bcbU, 0x1f9d45f1U, 0xacfa58abU, 0x4be30393U,
	0x2030fa55U, 0xad766df6U, 0x88cc7691U, 0xf5024c25U,
	0x4fe5d7fcU, 0xc52acbd7U, 0x26354480U, 0xb562a38fU,
	0xdeb15a49U, 0x25ba1b67U, 0x45ea0e98U, 0x5dfec0e1U,
	0xc32f7502U, 0x814cf012U, 0x8d4697a3U, 0x6bd3f9c6U,
	0x038f5fe7U, 0x15929c95U, 0xbf6d7aebU, 0x955259daU,
	0xd4be832dU, 0x587421d3U, 0x49e06929U, 0x8ec9c844U,
	0x75c2896aU, 0xf48e7978U, 0x99583e6bU, 0x27b971ddU,
	0xbee14fb6U, 0xf088ad17U, 0xc920ac66U, 0x7dce3ab4U,
	0x63df4a18U, 0xe51a3182U, 0x97513360U, 0x62537f45U,
	0xb16477e0U, 0xbb6bae84U, 0xfe81a01cU, 0xf9082b94U,
	0x70486858U, 0x8f45fd19U, 0x94de6c87U, 0x527bf8b7U,
	0xab73d323U, 0x724b02e2U, 0xe31f8f57U, 0x6655ab2aU,
	0xb2eb2807U, 0x2fb5c203U, 0x86c57b9aU, 0xd33708a5U,
	0x302887f2U, 0x23bfa5b2U, 0x02036abaU, 0xed16825cU,
	0x8acf1c2bU, 0xa779b492U, 0xf307f2f0U, 0x4e69e2a1U,
	0x65daf4cdU, 0x0605bed5U, 0xd134621fU, 0xc4a6fe8aU,
	0x342e539dU, 0xa2f355a0U, 0x058ae132U, 0xa4f6eb75U,
	0x0b83ec39U, 0x4060efaaU, 0x5e719f06U, 0xbd6e1051U,
	0x3e218af9U, 0x96dd063dU, 0xdd3e05aeU, 0x4de6bd46U,
	0x91548db5U, 0x71c45d05U, 0x0406d46fU, 0x605015ffU,
	0x1998fb24U, 0xd6bde997U, 0x894043ccU, 0x67d99e77U,
	0xb0e842bdU, 0x07898b88U, 0xe7195b38U, 0x79c8eedbU,
	0xa17c0a47U, 0x7c420fe9U, 0xf8841ec9U, 0x00000000U,
	0x09808683U, 0x322bed48U, 0x1e1170acU, 0x6c5a724eU,
	0xfd0efffbU, 0x0f853856U, 0x3daed51eU, 0x362d3927U,
	0x0a0fd964U, 0x685ca621U, 0x9b5b54d1U, 0x24362e3aU,
	0x0c0a67b1U, 0x9357e70fU, 0xb4ee96d2U, 0x1b9b919eU,
	0x80c0c54fU, 0x61dc20a2U, 0x5a774b69U, 0x1c121a16U,
	0xe293ba0aU, 0xc0a02ae5U, 0x3c22e043U, 0x121b171dU,
	0x0e090d0bU, 0xf28bc7adU, 0x2db6a8b9U, 0x141ea9c8U,
	0x57f11985U, 0xaf75074cU, 0xee99ddbbU, 0xa37f60fdU,
	0xf701269fU, 0x5c72f5bcU, 0x44663bc5U, 0x5bfb7e34U,
	0x8b432976U, 0xcb23c6dcU, 0xb6edfc68U, 0xb8e4f163U,
	0xd731dccaU, 0x42638510U, 0x13972240U, 0x84c61120U,
	0x854a247dU, 0xd2bb3df8U, 0xaef93211U, 0xc729a16dU,
	0x1d9e2f4bU, 0xdcb230f3U, 0x0d8652ecU, 0x77c1e3d0U,
	0x2bb3166cU, 0xa970b999U, 0x119448faU, 0x47e96422U,
	0xa8fc8cc4U, 0xa0f03f1aU, 0x567d2cd8U, 0x223390efU,
	0x87494ec7U, 0xd938d1c1U, 0x8ccaa2feU, 0x98d40b36U,
	0xa6f581cfU, 0xa57ade28U, 0xdab78e26U, 0x3fadbfa4U,
	0x2c3a9de4U, 0x5078920dU, 0x6a5fcc9bU, 0x547e4662U,
	0xf68d13c2U, 0x90d8b8e8U, 0x2e39f75eU, 0x82c3aff5U,
	0x9f5d80beU, 0x69d0937cU, 0x6fd52da9U, 0xcf2512b3U,
	0xc8ac993bU, 0x10187da7U, 0xe89c636eU, 0xdb3bbb7bU,
	0xcd267809U, 0x6e5918f4U, 0xec9ab701U, 0x834f9aa8U,
	0xe6956e65U, 0xaaffe67eU, 0x21bccf08U, 0xef15e8e6U,
	0xbae79bd9U, 0x4a6f36ceU, 0xea9f09d4U, 0x29b07cd6U,
	0x31a4b2afU, 0x2a3f2331U, 0xc6a59430U, 0x35a266c0U,
	0x744ebc37U, 0xfc82caa6U, 0xe090d0b0U, 0x33a7d815U,
	0xf104984aU, 0x41ecdaf7U, 0x7fcd500eU, 0x1791f62fU,
	0x764dd68dU, 0x43efb04dU, 0xccaa4d54U, 0xe49604dfU,
	0x9ed1b5e3U, 0x4c6a881bU, 0xc12c1fb8U, 0x4665517fU,
	0x9d5eea04U, 0x018c355dU, 0xfa877473U, 0xfb0b412eU,
	0xb3671d5aU, 0x92dbd252U, 0xe9105633U, 0x6dd64713U,
	0x9ad7618cU, 0x37a10c7aU, 0x59f8148eU, 0xeb133c89U,
	0xcea927eeU, 0xb761c935U, 0xe11ce5edU, 0x7a47b13cU,
	0x9cd2df59U, 0x55f2733fU, 0x1814ce79U, 0x73c737bfU,
	0x53f7cdeaU, 0x5ffdaa5bU, 0xdf3d6f14U, 0x7844db86U,
	0xcaaff381U, 0xb968c43eU, 0x3824342cU, 0xc2a3405fU,
	0x161dc372U, 0xbce2250cU, 0x283c498bU, 0xff0d9541U,
	0x39a80171U, 0x080cb3deU, 0xd8b4e49cU, 0x6456c190U,
	0x7bcb8461U, 0xd532b670U, 0x486c5c74U, 0xd0b85742U,
};
static const unsigned int DecryptT1[256] = {
	0x5051f4a7U, 0x537e4165U, 0xc31a17a4U, 0x963a275eU,
	0xcb3bab6bU, 0xf11f9d45U, 0xabacfa58U, 0x934be303U,
	0x552030faU, 0xf6ad766dU, 0x9188cc76U, 0x25f5024cU,
	0xfc4fe5d7U, 0xd7c52acbU, 0x80263544U, 0x8fb562a3U,
	0x49deb15aU, 0x6725ba1bU, 0x9845ea0eU, 0xe15dfec0U,
	0x02c32f75U, 0x12814cf0U, 0xa38d4697U, 0xc66bd3f9U,
	0xe7038f5fU, 0x9515929cU, 0xebbf6d7aU, 0xda955259U,
	0x2dd4be83U, 0xd3587421U, 0x2949e069U, 0x448ec9c8U,
	0x6a75c289U, 0x78f48e79U, 0x6b99583eU, 0xdd27b971U,
	0xb6bee14fU, 0x17f088adU, 0x66c920acU, 0xb47dce3aU,
	0x1863df4aU, 0x82e51a31U, 0x60975133U, 0x4562537fU,
	0xe0b16477U, 0x84bb6baeU, 0x1cfe81a0U, 0x94f9082bU,
	0x58704868U, 0x198f45fdU, 0x8794de6cU, 0xb7527bf8U,
	0x23ab73d3U, 0xe2724b02U, 0x57e31f8fU, 0x2a6655abU,
	0x07b2eb28U, 0x032fb5c2U, 0x9a86c57bU, 0xa5d33708U,
	0xf2302887U, 0xb223bfa5U, 0xba02036aU, 0x5ced1682U,
	0x2b8acf1cU, 0x92a779b4U, 0xf0f307f2U, 0xa14e69e2U,
	0xcd65daf4U, 0xd50605beU, 0x1fd13462U, 0x8ac4a6feU,
	0x9d342e53U, 0xa0a2f355U, 0x32058ae1U, 0x75a4f6ebU,
	0x390b83ecU, 0xaa4060efU, 0x065e719fU, 0x51bd6e10U,
	0xf93e218aU, 0x3d96dd06U, 0xaedd3e05U, 0x464de6bdU,
	0xb591548dU, 0x0571c45dU, 0x6f0406d4U, 0xff605015U,
	0x241998fbU, 0x97d6bde9U, 0xcc894043U, 0x7767d99eU,
	0xbdb0e842U, 0x8807898bU, 0x38e7195bU, 0xdb79c8eeU,
	0x47a17c0aU, 0xe97c420fU, 0xc9f8841eU, 0x00000000U,
	0x83098086U, 0x48322bedU, 0xac1e1170U, 0x4e6c5a72U,
	0xfbfd0effU, 0x560f8538U, 0x1e3daed5U, 0x27362d39U,
	0x640a0fd9U, 0x21685ca6U, 0xd19b5b54U, 0x3a24362eU,
	0xb10c0a67U, 0x0f9357e7U, 0xd2b4ee96U, 0x9e1b9b91U,
	0x4f80c0c5U, 0xa261dc20U, 0x695a774bU, 0x161c121aU,
	0x0ae293baU, 0xe5c0a02aU, 0x433c22e0U, 0x1d121b17U,
	0x0b0e090dU, 0xadf28bc7U, 0xb92db6a8U, 0xc8141ea9U,
	0x8557f119U, 0x4caf7507U, 0xbbee99ddU, 0xfda37f60U,
	0x9ff70126U, 0xbc5c72f5U, 0xc544663bU, 0x345bfb7eU,
	0x768b4329U, 0xdccb23c6U, 0x68b6edfcU, 0x63b8e4f1U,
	0xcad731dcU, 0x10426385U, 0x40139722U, 0x2084c611U,
	0x7d854a24U, 0xf8d2bb3dU, 0x11aef932U, 0x6dc729a1U,
	0x4b1d9e2fU, 0xf3dcb230U, 0xec0d8652U, 0xd077c1e3U,
	0x6c2bb316U, 0x99a970b9U, 0xfa119448U, 0x2247e964U,
	0xc4a8fc8cU, 0x1aa0f03fU, 0xd8567d2cU, 0xef223390U,
	0xc787494eU, 0xc1d938d1U, 0xfe8ccaa2U, 0x3698d40bU,
	0xcfa6f581U, 0x28a57adeU, 0x26dab78eU, 0xa43fadbfU,
	0xe42c3a9dU, 0x0d507892U, 0x9b6a5fccU, 0x62547e46U,
	0xc2f68d13U, 0xe890d8b8U, 0x5e2e39f7U, 0xf582c3afU,
	0xbe9f5d80U, 0x7c69d093U, 0xa96fd52dU, 0xb3cf2512U,
	0x3bc8ac99U, 0xa710187dU, 0x6ee89c63U, 0x7bdb3bbbU,
	0x09cd2678U, 0xf46e5918U, 0x01ec9ab7U, 0xa8834f9aU,
	0x65e6956eU, 0x7eaaffe6U, 0x0821bccfU, 0xe6ef15e8U,
	0xd9bae79bU, 0xce4a6f36U, 0xd4ea9f09U, 0xd629b07cU,
	0xaf31a4b2U, 0x312a3f23U, 0x30c6a594U, 0xc035a266U,
	0x37744ebcU, 0xa6fc82caU, 0xb0e090d0U, 0x1533a7d8U,
	0x4af10498U, 0xf741ecdaU, 0x0e7fcd50U, 0x2f1791f6U,
	0x8d764dd6U, 0x4d43efb0U, 0x54ccaa4dU, 0xdfe49604U,
	0xe39ed1b5U, 0x1b4c6a88U, 0xb8c12c1fU, 0x7f466551U,
	0x049d5eeaU, 0x5d018c35U, 0x73fa8774U, 0x2efb0b41U,
	0x5ab3671dU, 0x5292dbd2U, 0x33e91056U, 0x136dd647U,
	0x8c9ad761U, 0x7a37a10cU, 0x8e59f814U, 0x89eb133cU,
	0xeecea927U, 0x35b761c9U, 0xede11ce5U, 0x3c7a47b1U,
	0x599cd2dfU, 0x3f55f273U, 0x791814ceU, 0xbf73c737U,
	0xea53f7cdU, 0x5b5ffdaaU, 0x14df3d6fU, 0x867844dbU,
	0x81caaff3U, 0x3eb968c4U, 0x2c382434U, 0x5fc2a340U,
	0x72161dc3U, 0x0cbce225U, 0x8b283c49U, 0x41ff0d95U,
	0x7139a801U, 0xde080cb3U, 0x9cd8b4e4U, 0x906456c1U,
	0x617bcb84U, 0x70d532b6U, 0x74486c5cU, 0x42d0b857U,
};
static const unsigned int DecryptT2[256] = {
	0xa75051f4U, 0x65537e41U, 0xa4c31a17U, 0x5e963a27U,
	0x6bcb3babU, 0x45f11f9dU, 0x58abacfaU, 0x03934be3U,
	0xfa552030U, 0x6df6ad76U, 0x769188ccU, 0x4c25f502U,
	0xd7fc4fe5U, 0xcbd7c52aU, 0x44802635U, 0xa38fb562U,
	0x5a49deb1U, 0x1b6725baU, 0x0e9845eaU, 0xc0e15dfeU,
	0x7502c32fU, 0xf012814cU, 0x97a38d46U, 0xf9c66bd3U,
	0x5fe7038fU, 0x9c951592U, 0x7aebbf6dU, 0x59da9552U,
	0x832dd4beU, 0x21d35874U, 0x692949e0U, 0xc8448ec9U,
	0x896a75c2U, 0x7978f48eU, 0x3e6b9958U, 0x71dd27b9U,
	0x4fb6bee1U, 0xad17f088U, 0xac66c920U, 0x3ab47dceU,
	0x4a1863dfU, 0x3182e51aU, 0x33609751U, 0x7f456253U,
	0x77e0b164U, 0xae84bb6bU, 0xa01cfe81U, 0x2b94f908U,
	0x68587048U, 0xfd198f45U, 0x6c8794deU, 0xf8b7527bU,
	0xd323ab73U, 0x02e2724bU, 0x8f57e31fU, 0xab2a6655U,
	0x2807b2ebU, 0xc2032fb5U, 0x7b9a86c5U, 0x08a5d337U,
	0x87f23028U, 0xa5b223bfU, 0x6aba0203U, 0x825ced16U,
	0x1c2b8acfU, 0xb492a779U, 0xf2f0f307U, 0xe2a14e69U,
	0xf4cd65daU, 0xbed50605U, 0x621fd134U, 0xfe8ac4a6U,
	0x539d342eU, 0x55a0a2f3U, 0xe132058aU, 0xeb75a4f6U,
	0xec390b83U, 0xefaa4060U, 0x9f065e71U, 0x1051bd6eU,
	0x8af93e21U, 0x063d96ddU, 0x05aedd3eU, 0xbd464de6U,
	0x8db59154U, 0x5d0571c4U, 0xd46f0406U, 0x15ff6050U,
	0xfb241998U, 0xe997d6bdU, 0x43cc8940U, 0x9e7767d9U,
	0x42bdb0e8U, 0x8b880789U, 0x5b38e719U, 0xeedb79c8U,
	0x0a47a17cU, 0x0fe97c42U, 0x1ec9f884U, 0x00000000U,
	0x86830980U, 0xed48322bU, 0x70ac1e11U, 0x724e6c5aU,
	0xfffbfd0eU, 0x38560f85U, 0xd51e3daeU, 0x3927362dU,
	0xd9640a0fU, 0xa621685cU, 0x54d19b5bU, 0x2e3a2436U,
	0x67b10c0aU, 0xe70f9357U, 0x96d2b4eeU, 0x919e1b9bU,
	0xc54f80c0U, 0x20a261dcU, 0x4b695a77U, 0x1a161c12U,
	0xba0ae293U, 0x2ae5c0a0U, 0xe0433c22U, 0x171d121bU,
	0x0d0b0e09U, 0xc7adf28bU, 0xa8b92db6U, 0xa9c8141eU,
	0x198557f1U, 0x074caf75U, 0xddbbee99U, 0x60fda37fU,
	0x269ff701U, 0xf5bc5c72U, 0x3bc54466U, 0x7e345bfbU,
	0x29768b43U, 0xc6dccb23U, 0xfc68b6edU, 0xf163b8e4U,
	0xdccad731U, 0x85104263U, 0x22401397U, 0x112084c6U,
	0x247d854aU, 0x3df8d2bbU, 0x3211aef9U, 0xa16dc729U,
	0x2f4b1d9eU, 0x30f3dcb2U, 0x52ec0d86U, 0xe3d077c1U,
	0x166c2bb3U, 0xb999a970U, 0x48fa1194U, 0x642247e9U,
	0x8cc4a8fcU, 0x3f1aa0f0U, 0x2cd8567dU, 0x90ef2233U,
	0x4ec78749U, 0xd1c1d938U, 0xa2fe8ccaU, 0x0b3698d4U,
	0x81cfa6f5U, 0xde28a57aU, 0x8e26dab7U, 0xbfa43fadU,
	0x9de42c3aU, 0x920d5078U, 0xcc9b6a5fU, 0x4662547eU,
	0x13c2f68dU, 0xb8e890d8U, 0xf75e2e39U, 0xaff582c3U,
	0x80be9f5dU, 0x937c69d0U, 0x2da96fd5U, 0x12b3cf25U,
	0x993bc8acU, 0x7da71018U, 0x636ee89cU, 0xbb7bdb3bU,
	0x7809cd26U, 0x18f46e59U, 0xb701ec9aU, 0x9aa8834fU,
	0x6e65e695U, 0xe67eaaffU, 0xcf0821bcU, 0xe8e6ef15U,
	0x9bd9bae7U, 0x36ce4a6fU, 0x09d4ea9fU, 0x7cd629b0U,
	0xb2af31a4U, 0x23312a3fU, 0x9430c6a5U, 0x66c035a2U,
	0xbc37744eU, 0xcaa6fc82U, 0xd0b0e090U, 0xd81533a7U,
	0x984af104U, 0xdaf741ecU, 0x500e7fcdU, 0xf62f1791U,
	0xd68d764dU, 0xb04d43efU, 0x4d54ccaaU, 0x04dfe496U,
	0xb5e39ed1U, 0x881b4c6aU, 0x1fb8c12cU, 0x517f4665U,
	0xea049d5eU, 0x355d018cU, 0x7473fa87U, 0x412efb0bU,
	0x1d5ab367U, 0xd25292dbU, 0x5633e910U, 0x47136dd6U,
	0x618c9ad7U, 0x0c7a37a1U, 0x148e59f8U, 0x3c89eb13U,
	0x27eecea9U, 0xc935b761U, 0xe5ede11cU, 0xb13c7a47U,
	0xdf599cd2U, 0x733f55f2U, 0xce791814U, 0x37bf73c7U,
	0xcdea53f7U, 0xaa5b5ffdU, 0x6f14df3dU, 0xdb867844U,
	0xf381caafU, 0xc43eb968U, 0x342c3824U, 0x405fc2a3U,
	0xc372161dU, 0x250cbce2U, 0x498b283cU, 0x9541ff0dU,
	0x017139a8U, 0xb3de080cU, 0xe49cd8b4U, 0xc1906456U,
	0x84617bcbU, 0xb670d532U, 0x5c74486cU, 0x5742d0b8U,
};
static const unsigned int DecryptT3[256] = {
	0xf4a75051U, 0x4165537eU, 0x17a4c31aU, 0x275e963aU,
	0xab6bcb3bU, 0x9d45f11fU, 0xfa58abacU, 0xe303934bU,
	0x30fa5520U, 0x766df6adU, 0xcc769188U, 0x024c25f5U,
	0xe5d7fc4fU, 0x2acbd7c5U, 0x35448026U, 0x62a38fb5U,
	0xb15a49deU, 0xba1b6725U, 0xea0e9845U, 0xfec0e15dU,
	0x2f7502c3U, 0x4cf01281U, 0x4697a38dU, 0xd3f9c66bU,
	0x8f5fe703U, 0x929c9515U, 0x6d7aebbfU, 0x5259da95U,
	0xbe832dd4U, 0x7421d358U, 0xe0692949U, 0xc9c8448eU,
	0xc2896a75U, 0x8e7978f4U, 0x583e6b99U, 0xb971dd27U,
	0xe14fb6beU, 0x88ad17f0U, 0x20ac66c9U, 0xce3ab47dU,
	0xdf4a1863U, 0x1a3182e5U, 0x51336097U, 0x537f4562U,
	0x6477e0b1U, 0x6bae84bbU, 0x81a01cfeU, 0x082b94f9U,
	0x48685870U, 0x45fd198fU, 0xde6c8794U, 0x7bf8b752U,
	0x73d323abU, 0x4b02e272U, 0x1f8f57e3U, 0x55ab2a66U,
	0xeb2807b2U, 0xb5c2032fU, 0xc57b9a86U, 0x3708a5d3U,
	0x2887f230U, 0xbfa5b223U, 0x036aba02U, 0x16825cedU,
	0xcf1c2b8aU, 0x79b492a7U, 0x07f2f0f3U, 0x69e2a14eU,
	0xdaf4cd65U, 0x05bed506U, 0x34621fd1U, 0xa6fe8ac4U,
	0x2e539d34U, 0xf355a0a2U, 0x8ae13205U, 0xf6eb75a4U,
	0x83ec390bU, 0x60efaa40U, 0x719f065eU, 0x6e1051bdU,
	0x218af93eU, 0xdd063d96U, 0x3e05aeddU, 0xe6bd464dU,
	0x548db591U, 0xc45d0571U, 0x06d46f04U, 0x5015ff60U,
	0x98fb2419U, 0xbde997d6U, 0x4043cc89U, 0xd99e7767U,
	0xe842bdb0U, 0x898b8807U, 0x195b38e7U, 0xc8eedb79U,
	0x7c0a47a1U, 0x420fe97cU, 0x841ec9f8U, 0x00000000U,
	0x80868309U, 0x2bed4832U, 0x1170ac1eU, 0x5a724e6cU,
	0x0efffbfdU, 0x8538560fU, 0xaed51e3dU, 0x2d392736U,
	0x0fd9640aU, 0x5ca62168U, 0x5b54d19bU, 0x362e3a24U,
	0x0a67b10cU, 0x57e70f93U, 0xee96d2b4U, 0x9b919e1bU,
	0xc0c54f80U, 0xdc20a261U, 0x774b695aU, 0x121a161cU,
	0x93ba0ae2U, 0xa02ae5c0U, 0x22e0433cU, 0x1b171d12U,
	0x090d0b0eU, 0x8bc7adf2U, 0xb6a8b92dU, 0x1ea9c814U,
	0xf1198557U, 0x75074cafU, 0x99ddbbeeU, 0x7f60fda3U,
	0x01269ff7U, 0x72f5bc5cU, 0x663bc544U, 0xfb7e345bU,
	0x4329768bU, 0x23c6dccbU, 0xedfc68b6U, 0xe4f163b8U,
	0x31dccad7U, 0x63851042U, 0x97224013U, 0xc6112084U,
	0x4a247d85U, 0xbb3df8d2U, 0xf93211aeU, 0x29a16dc7U,
	0x9e2f4b1dU, 0xb230f3dcU, 0x8652ec0dU, 0xc1e3d077U,
	0xb3166c2bU, 0x70b999a9U, 0x9448fa11U, 0xe9642247U,
	0xfc8cc4a8U, 0xf03f1aa0U, 0x7d2cd856U, 0x3390ef22U,
	0x494ec787U, 0x38d1c1d9U, 0xcaa2fe8cU, 0xd40b3698U,
	0xf581cfa6U, 0x7ade28a5U, 0xb78e26daU, 0xadbfa43fU,
	0x3a9de42cU, 0x78920d50U, 0x5fcc9b6aU, 0x7e466254U,
	0x8d13c2f6U, 0xd8b8e890U, 0x39f75e2eU, 0xc3aff582U,
	0x5d80be9fU, 0xd0937c69U, 0xd52da96fU, 0x2512b3cfU,
	0xac993bc8U, 0x187da710U, 0x9c636ee8U, 0x3bbb7bdbU,
	0x267809cdU, 0x5918f46eU, 0x9ab701ecU, 0x4f9aa883U,
	0x956e65e6U, 0xffe67eaaU, 0xbccf0821U, 0x15e8e6efU,
	0xe79bd9baU, 0x6f36ce4aU, 0x9f09d4eaU, 0xb07cd629U,
	0xa4b2af31U, 0x3f23312aU, 0xa59430c6U, 0xa266c035U,
	0x4ebc3774U, 0x82caa6fcU, 0x90d0b0e0U, 0xa7d81533U,
	0x04984af1U, 0xecdaf741U, 0xcd500e7fU, 0x91f62f17U,
	0x4dd68d76U, 0xefb04d43U, 0xaa4d54ccU, 0x9604dfe4U,
	0xd1b5e39eU, 0x6a881b4cU, 0x2c1fb8c1U, 0x65517f46U,
	0x5eea049dU, 0x8c355d01U, 0x877473faU, 0x0b412efbU,
	0x671d5ab3U, 0xdbd25292U, 0x105633e9U, 0xd647136dU,
	0xd7618c9aU, 0xa10c7a37U, 0xf8148e59U, 0x133c89ebU,
	0xa927eeceU, 0x61c935b7U, 0x1ce5ede1U, 0x47b13c7aU,
	0xd2df599cU, 0xf2733f55U, 0x14ce7918U, 0xc737bf73U,
	0xf7cdea53U, 0xfdaa5b5fU, 0x3d6f14dfU, 0x44db8678U,
	0xaff381caU, 0x68c43eb9U, 0x24342c38U, 0xa3405fc2U,
	0x1dc37216U, 0xe2250cbcU, 0x3c498b28U, 0x0d9541ffU,
	0xa8017139U, 0x0cb3de08U, 0xb4e49cd8U, 0x56c19064U,
	0xcb84617bU, 0x32b670d5U, 0x6c5c7448U, 0xb85742d0U,
};

 unsigned int DecryptT[1024] = {
	0x50a7f451,     0x5365417e,     0xc3a4171a,     0x965e273a,     0xcb6bab3b,     0xf1459d1f,     0xab58faac,     0x9303e34b,     0x55fa3020,     0xf66d76ad,
	0x9176cc88,     0x254c02f5,     0xfcd7e54f,     0xd7cb2ac5,     0x80443526,     0x8fa362b5,     0x495ab1de,     0x671bba25,     0x980eea45,     0xe1c0fe5d,
	0x02752fc3,     0x12f04c81,     0xa397468d,     0xc6f9d36b,     0xe75f8f03,     0x959c9215,     0xeb7a6dbf,     0xda595295,     0x2d83bed4,     0xd3217458,
	0x2969e049,     0x44c8c98e,     0x6a89c275,     0x78798ef4,     0x6b3e5899,     0xdd71b927,     0xb64fe1be,     0x17ad88f0,     0x66ac20c9,     0xb43ace7d,
	0x184adf63,     0x82311ae5,     0x60335197,     0x457f5362,     0xe07764b1,     0x84ae6bbb,     0x1ca081fe,     0x942b08f9,     0x58684870,     0x19fd458f,
	0x876cde94,     0xb7f87b52,     0x23d373ab,     0xe2024b72,     0x578f1fe3,     0x2aab5566,     0x0728ebb2,     0x03c2b52f,     0x9a7bc586,     0xa50837d3,
	0xf2872830,     0xb2a5bf23,     0xba6a0302,     0x5c8216ed,     0x2b1ccf8a,     0x92b479a7,     0xf0f207f3,     0xa1e2694e,     0xcdf4da65,     0xd5be0506,
	0x1f6234d1,     0x8afea6c4,     0x9d532e34,     0xa055f3a2,     0x32e18a05,     0x75ebf6a4,     0x39ec830b,     0xaaef6040,     0x069f715e,     0x51106ebd,
	0xf98a213e,     0x3d06dd96,     0xae053edd,     0x46bde64d,     0xb58d5491,     0x055dc471,     0x6fd40604,     0xff155060,     0x24fb9819,     0x97e9bdd6,
	0xcc434089,     0x779ed967,     0xbd42e8b0,     0x888b8907,     0x385b19e7,     0xdbeec879,     0x470a7ca1,     0xe90f427c,     0xc91e84f8,     0x00000000,
	0x83868009,     0x48ed2b32,     0xac70111e,     0x4e725a6c,     0xfbff0efd,     0x5638850f,     0x1ed5ae3d,     0x27392d36,     0x64d90f0a,     0x21a65c68,
	0xd1545b9b,     0x3a2e3624,     0xb1670a0c,     0x0fe75793,     0xd296eeb4,     0x9e919b1b,     0x4fc5c080,     0xa220dc61,     0x694b775a,     0x161a121c,
	0x0aba93e2,     0xe52aa0c0,     0x43e0223c,     0x1d171b12,     0x0b0d090e,     0xadc78bf2,     0xb9a8b62d,     0xc8a91e14,     0x8519f157,     0x4c0775af,
	0xbbdd99ee,     0xfd607fa3,     0x9f2601f7,     0xbcf5725c,     0xc53b6644,     0x347efb5b,     0x7629438b,     0xdcc623cb,     0x68fcedb6,     0x63f1e4b8,
	0xcadc31d7,     0x10856342,     0x40229713,     0x2011c684,     0x7d244a85,     0xf83dbbd2,     0x1132f9ae,     0x6da129c7,     0x4b2f9e1d,     0xf330b2dc,
	0xec52860d,     0xd0e3c177,     0x6c16b32b,     0x99b970a9,     0xfa489411,     0x2264e947,     0xc48cfca8,     0x1a3ff0a0,     0xd82c7d56,     0xef903322,
	0xc74e4987,     0xc1d138d9,     0xfea2ca8c,     0x360bd498,     0xcf81f5a6,     0x28de7aa5,     0x268eb7da,     0xa4bfad3f,     0xe49d3a2c,     0x0d927850,
	0x9bcc5f6a,     0x62467e54,     0xc2138df6,     0xe8b8d890,     0x5ef7392e,     0xf5afc382,     0xbe805d9f,     0x7c93d069,     0xa92dd56f,     0xb31225cf,
	0x3b99acc8,     0xa77d1810,     0x6e639ce8,     0x7bbb3bdb,     0x097826cd,     0xf418596e,     0x01b79aec,     0xa89a4f83,     0x656e95e6,     0x7ee6ffaa,
	0x08cfbc21,     0xe6e815ef,     0xd99be7ba,     0xce366f4a,     0xd4099fea,     0xd67cb029,     0xafb2a431,     0x31233f2a,     0x3094a5c6,     0xc066a235,
	0x37bc4e74,     0xa6ca82fc,     0xb0d090e0,     0x15d8a733,     0x4a9804f1,     0xf7daec41,     0x0e50cd7f,     0x2ff69117,     0x8dd64d76,     0x4db0ef43,
	0x544daacc,     0xdf0496e4,     0xe3b5d19e,     0x1b886a4c,     0xb81f2cc1,     0x7f516546,     0x04ea5e9d,     0x5d358c01,     0x737487fa,     0x2e410bfb,
	0x5a1d67b3,     0x52d2db92,     0x335610e9,     0x1347d66d,     0x8c61d79a,     0x7a0ca137,     0x8e14f859,     0x893c13eb,     0xee27a9ce,     0x35c961b7,
	0xede51ce1,     0x3cb1477a,     0x59dfd29c,     0x3f73f255,     0x79ce1418,     0xbf37c773,     0xeacdf753,     0x5baafd5f,     0x146f3ddf,     0x86db4478,
	0x81f3afca,     0x3ec468b9,     0x2c342438,     0x5f40a3c2,     0x72c31d16,     0x0c25e2bc,     0x8b493c28,     0x41950dff,     0x7101a839,     0xdeb30c08,
	0x9ce4b4d8,     0x90c15664,     0x6184cb7b,     0x70b632d5,     0x745c6c48,     0x4257b8d0,     0xa7f45150,     0x65417e53,     0xa4171ac3,     0x5e273a96,
	0x6bab3bcb,     0x459d1ff1,     0x58faacab,     0x03e34b93,     0xfa302055,     0x6d76adf6,     0x76cc8891,     0x4c02f525,     0xd7e54ffc,     0xcb2ac5d7,
	0x44352680,     0xa362b58f,     0x5ab1de49,     0x1bba2567,     0x0eea4598,     0xc0fe5de1,     0x752fc302,     0xf04c8112,     0x97468da3,     0xf9d36bc6,
	0x5f8f03e7,     0x9c921595,     0x7a6dbfeb,     0x595295da,     0x83bed42d,     0x217458d3,     0x69e04929,     0xc8c98e44,     0x89c2756a,     0x798ef478,
	0x3e58996b,     0x71b927dd,     0x4fe1beb6,     0xad88f017,     0xac20c966,     0x3ace7db4,     0x4adf6318,     0x311ae582,     0x33519760,     0x7f536245,
	0x7764b1e0,     0xae6bbb84,     0xa081fe1c,     0x2b08f994,     0x68487058,     0xfd458f19,     0x6cde9487,     0xf87b52b7,     0xd373ab23,     0x024b72e2,
	0x8f1fe357,     0xab55662a,     0x28ebb207,     0xc2b52f03,     0x7bc5869a,     0x0837d3a5,     0x872830f2,     0xa5bf23b2,     0x6a0302ba,     0x8216ed5c,
	0x1ccf8a2b,     0xb479a792,     0xf207f3f0,     0xe2694ea1,     0xf4da65cd,     0xbe0506d5,     0x6234d11f,     0xfea6c48a,     0x532e349d,     0x55f3a2a0,
	0xe18a0532,     0xebf6a475,     0xec830b39,     0xef6040aa,     0x9f715e06,     0x106ebd51,     0x8a213ef9,     0x06dd963d,     0x053eddae,     0xbde64d46,
	0x8d5491b5,     0x5dc47105,     0xd406046f,     0x155060ff,     0xfb981924,     0xe9bdd697,     0x434089cc,     0x9ed96777,     0x42e8b0bd,     0x8b890788,
	0x5b19e738,     0xeec879db,     0x0a7ca147,     0x0f427ce9,     0x1e84f8c9,     0x00000000,     0x86800983,     0xed2b3248,     0x70111eac,     0x725a6c4e,
	0xff0efdfb,     0x38850f56,     0xd5ae3d1e,     0x392d3627,     0xd90f0a64,     0xa65c6821,     0x545b9bd1,     0x2e36243a,     0x670a0cb1,     0xe757930f,
	0x96eeb4d2,     0x919b1b9e,     0xc5c0804f,     0x20dc61a2,     0x4b775a69,     0x1a121c16,     0xba93e20a,     0x2aa0c0e5,     0xe0223c43,     0x171b121d,
	0x0d090e0b,     0xc78bf2ad,     0xa8b62db9,     0xa91e14c8,     0x19f15785,     0x0775af4c,     0xdd99eebb,     0x607fa3fd,     0x2601f79f,     0xf5725cbc,
	0x3b6644c5,     0x7efb5b34,     0x29438b76,     0xc623cbdc,     0xfcedb668,     0xf1e4b863,     0xdc31d7ca,     0x85634210,     0x22971340,     0x11c68420,
	0x244a857d,     0x3dbbd2f8,     0x32f9ae11,     0xa129c76d,     0x2f9e1d4b,     0x30b2dcf3,     0x52860dec,     0xe3c177d0,     0x16b32b6c,     0xb970a999,
	0x489411fa,     0x64e94722,     0x8cfca8c4,     0x3ff0a01a,     0x2c7d56d8,     0x903322ef,     0x4e4987c7,     0xd138d9c1,     0xa2ca8cfe,     0x0bd49836,
	0x81f5a6cf,     0xde7aa528,     0x8eb7da26,     0xbfad3fa4,     0x9d3a2ce4,     0x9278500d,     0xcc5f6a9b,     0x467e5462,     0x138df6c2,     0xb8d890e8,
	0xf7392e5e,     0xafc382f5,     0x805d9fbe,     0x93d0697c,     0x2dd56fa9,     0x1225cfb3,     0x99acc83b,     0x7d1810a7,     0x639ce86e,     0xbb3bdb7b,
	0x7826cd09,     0x18596ef4,     0xb79aec01,     0x9a4f83a8,     0x6e95e665,     0xe6ffaa7e,     0xcfbc2108,     0xe815efe6,     0x9be7bad9,     0x366f4ace,
	0x099fead4,     0x7cb029d6,     0xb2a431af,     0x233f2a31,     0x94a5c630,     0x66a235c0,     0xbc4e7437,     0xca82fca6,     0xd090e0b0,     0xd8a73315,
	0x9804f14a,     0xdaec41f7,     0x50cd7f0e,     0xf691172f,     0xd64d768d,     0xb0ef434d,     0x4daacc54,     0x0496e4df,     0xb5d19ee3,     0x886a4c1b,
	0x1f2cc1b8,     0x5165467f,     0xea5e9d04,     0x358c015d,     0x7487fa73,     0x410bfb2e,     0x1d67b35a,     0xd2db9252,     0x5610e933,     0x47d66d13,
	0x61d79a8c,     0x0ca1377a,     0x14f8598e,     0x3c13eb89,     0x27a9ceee,     0xc961b735,     0xe51ce1ed,     0xb1477a3c,     0xdfd29c59,     0x73f2553f,
	0xce141879,     0x37c773bf,     0xcdf753ea,     0xaafd5f5b,     0x6f3ddf14,     0xdb447886,     0xf3afca81,     0xc468b93e,     0x3424382c,     0x40a3c25f,
	0xc31d1672,     0x25e2bc0c,     0x493c288b,     0x950dff41,     0x01a83971,     0xb30c08de,     0xe4b4d89c,     0xc1566490,     0x84cb7b61,     0xb632d570,
	0x5c6c4874,     0x57b8d042,     0xf45150a7,     0x417e5365,     0x171ac3a4,     0x273a965e,     0xab3bcb6b,     0x9d1ff145,     0xfaacab58,     0xe34b9303,
	0x302055fa,     0x76adf66d,     0xcc889176,     0x02f5254c,     0xe54ffcd7,     0x2ac5d7cb,     0x35268044,     0x62b58fa3,     0xb1de495a,     0xba25671b,
	0xea45980e,     0xfe5de1c0,     0x2fc30275,     0x4c8112f0,     0x468da397,     0xd36bc6f9,     0x8f03e75f,     0x9215959c,     0x6dbfeb7a,     0x5295da59,
	0xbed42d83,     0x7458d321,     0xe0492969,     0xc98e44c8,     0xc2756a89,     0x8ef47879,     0x58996b3e,     0xb927dd71,     0xe1beb64f,     0x88f017ad,
	0x20c966ac,     0xce7db43a,     0xdf63184a,     0x1ae58231,     0x51976033,     0x5362457f,     0x64b1e077,     0x6bbb84ae,     0x81fe1ca0,     0x08f9942b,
	0x48705868,     0x458f19fd,     0xde94876c,     0x7b52b7f8,     0x73ab23d3,     0x4b72e202,     0x1fe3578f,     0x55662aab,     0xebb20728,     0xb52f03c2,
	0xc5869a7b,     0x37d3a508,     0x2830f287,     0xbf23b2a5,     0x0302ba6a,     0x16ed5c82,     0xcf8a2b1c,     0x79a792b4,     0x07f3f0f2,     0x694ea1e2,
	0xda65cdf4,     0x0506d5be,     0x34d11f62,     0xa6c48afe,     0x2e349d53,     0xf3a2a055,     0x8a0532e1,     0xf6a475eb,     0x830b39ec,     0x6040aaef,
	0x715e069f,     0x6ebd5110,     0x213ef98a,     0xdd963d06,     0x3eddae05,     0xe64d46bd,     0x5491b58d,     0xc471055d,     0x06046fd4,     0x5060ff15,
	0x981924fb,     0xbdd697e9,     0x4089cc43,     0xd967779e,     0xe8b0bd42,     0x8907888b,     0x19e7385b,     0xc879dbee,     0x7ca1470a,     0x427ce90f,
	0x84f8c91e,     0x00000000,     0x80098386,     0x2b3248ed,     0x111eac70,     0x5a6c4e72,     0x0efdfbff,     0x850f5638,     0xae3d1ed5,     0x2d362739,
	0x0f0a64d9,     0x5c6821a6,     0x5b9bd154,     0x36243a2e,     0x0a0cb167,     0x57930fe7,     0xeeb4d296,     0x9b1b9e91,     0xc0804fc5,     0xdc61a220,
	0x775a694b,     0x121c161a,     0x93e20aba,     0xa0c0e52a,     0x223c43e0,     0x1b121d17,     0x090e0b0d,     0x8bf2adc7,     0xb62db9a8,     0x1e14c8a9,
	0xf1578519,     0x75af4c07,     0x99eebbdd,     0x7fa3fd60,     0x01f79f26,     0x725cbcf5,     0x6644c53b,     0xfb5b347e,     0x438b7629,     0x23cbdcc6,
	0xedb668fc,     0xe4b863f1,     0x31d7cadc,     0x63421085,     0x97134022,     0xc6842011,     0x4a857d24,     0xbbd2f83d,     0xf9ae1132,     0x29c76da1,
	0x9e1d4b2f,     0xb2dcf330,     0x860dec52,     0xc177d0e3,     0xb32b6c16,     0x70a999b9,     0x9411fa48,     0xe9472264,     0xfca8c48c,     0xf0a01a3f,
	0x7d56d82c,     0x3322ef90,     0x4987c74e,     0x38d9c1d1,     0xca8cfea2,     0xd498360b,     0xf5a6cf81,     0x7aa528de,     0xb7da268e,     0xad3fa4bf,
	0x3a2ce49d,     0x78500d92,     0x5f6a9bcc,     0x7e546246,     0x8df6c213,     0xd890e8b8,     0x392e5ef7,     0xc382f5af,     0x5d9fbe80,     0xd0697c93,
	0xd56fa92d,     0x25cfb312,     0xacc83b99,     0x1810a77d,     0x9ce86e63,     0x3bdb7bbb,     0x26cd0978,     0x596ef418,     0x9aec01b7,     0x4f83a89a,
	0x95e6656e,     0xffaa7ee6,     0xbc2108cf,     0x15efe6e8,     0xe7bad99b,     0x6f4ace36,     0x9fead409,     0xb029d67c,     0xa431afb2,     0x3f2a3123,
	0xa5c63094,     0xa235c066,     0x4e7437bc,     0x82fca6ca,     0x90e0b0d0,     0xa73315d8,     0x04f14a98,     0xec41f7da,     0xcd7f0e50,     0x91172ff6,
	0x4d768dd6,     0xef434db0,     0xaacc544d,     0x96e4df04,     0xd19ee3b5,     0x6a4c1b88,     0x2cc1b81f,     0x65467f51,     0x5e9d04ea,     0x8c015d35,
	0x87fa7374,     0x0bfb2e41,     0x67b35a1d,     0xdb9252d2,     0x10e93356,     0xd66d1347,     0xd79a8c61,     0xa1377a0c,     0xf8598e14,     0x13eb893c,
	0xa9ceee27,     0x61b735c9,     0x1ce1ede5,     0x477a3cb1,     0xd29c59df,     0xf2553f73,     0x141879ce,     0xc773bf37,     0xf753eacd,     0xfd5f5baa,
	0x3ddf146f,     0x447886db,     0xafca81f3,     0x68b93ec4,     0x24382c34,     0xa3c25f40,     0x1d1672c3,     0xe2bc0c25,     0x3c288b49,     0x0dff4195,
	0xa8397101,     0x0c08deb3,     0xb4d89ce4,     0x566490c1,     0xcb7b6184,     0x32d570b6,     0x6c48745c,     0xb8d04257,     0x5150a7f4,     0x7e536541,
	0x1ac3a417,     0x3a965e27,     0x3bcb6bab,     0x1ff1459d,     0xacab58fa,     0x4b9303e3,     0x2055fa30,     0xadf66d76,     0x889176cc,     0xf5254c02,
	0x4ffcd7e5,     0xc5d7cb2a,     0x26804435,     0xb58fa362,     0xde495ab1,     0x25671bba,     0x45980eea,     0x5de1c0fe,     0xc302752f,     0x8112f04c,
	0x8da39746,     0x6bc6f9d3,     0x03e75f8f,     0x15959c92,     0xbfeb7a6d,     0x95da5952,     0xd42d83be,     0x58d32174,     0x492969e0,     0x8e44c8c9,
	0x756a89c2,     0xf478798e,     0x996b3e58,     0x27dd71b9,     0xbeb64fe1,     0xf017ad88,     0xc966ac20,     0x7db43ace,     0x63184adf,     0xe582311a,
	0x97603351,     0x62457f53,     0xb1e07764,     0xbb84ae6b,     0xfe1ca081,     0xf9942b08,     0x70586848,     0x8f19fd45,     0x94876cde,     0x52b7f87b,
	0xab23d373,     0x72e2024b,     0xe3578f1f,     0x662aab55,     0xb20728eb,     0x2f03c2b5,     0x869a7bc5,     0xd3a50837,     0x30f28728,     0x23b2a5bf,
	0x02ba6a03,     0xed5c8216,     0x8a2b1ccf,     0xa792b479,     0xf3f0f207,     0x4ea1e269,     0x65cdf4da,     0x06d5be05,     0xd11f6234,     0xc48afea6,
	0x349d532e,     0xa2a055f3,     0x0532e18a,     0xa475ebf6,     0x0b39ec83,     0x40aaef60,     0x5e069f71,     0xbd51106e,     0x3ef98a21,     0x963d06dd,
	0xddae053e,     0x4d46bde6,     0x91b58d54,     0x71055dc4,     0x046fd406,     0x60ff1550,     0x1924fb98,     0xd697e9bd,     0x89cc4340,     0x67779ed9,
	0xb0bd42e8,     0x07888b89,     0xe7385b19,     0x79dbeec8,     0xa1470a7c,     0x7ce90f42,     0xf8c91e84,     0x00000000,     0x09838680,     0x3248ed2b,
	0x1eac7011,     0x6c4e725a,     0xfdfbff0e,     0x0f563885,     0x3d1ed5ae,     0x3627392d,     0x0a64d90f,     0x6821a65c,     0x9bd1545b,     0x243a2e36,
	0x0cb1670a,     0x930fe757,     0xb4d296ee,     0x1b9e919b,     0x804fc5c0,     0x61a220dc,     0x5a694b77,     0x1c161a12,     0xe20aba93,     0xc0e52aa0,
	0x3c43e022,     0x121d171b,     0x0e0b0d09,     0xf2adc78b,     0x2db9a8b6,     0x14c8a91e,     0x578519f1,     0xaf4c0775,     0xeebbdd99,     0xa3fd607f,
	0xf79f2601,     0x5cbcf572,     0x44c53b66,     0x5b347efb,     0x8b762943,     0xcbdcc623,     0xb668fced,     0xb863f1e4,     0xd7cadc31,     0x42108563,
	0x13402297,     0x842011c6,     0x857d244a,     0xd2f83dbb,     0xae1132f9,     0xc76da129,     0x1d4b2f9e,     0xdcf330b2,     0x0dec5286,     0x77d0e3c1,
	0x2b6c16b3,     0xa999b970,     0x11fa4894,     0x472264e9,     0xa8c48cfc,     0xa01a3ff0,     0x56d82c7d,     0x22ef9033,     0x87c74e49,     0xd9c1d138,
	0x8cfea2ca,     0x98360bd4,     0xa6cf81f5,     0xa528de7a,     0xda268eb7,     0x3fa4bfad,     0x2ce49d3a,     0x500d9278,     0x6a9bcc5f,     0x5462467e,
	0xf6c2138d,     0x90e8b8d8,     0x2e5ef739,     0x82f5afc3,     0x9fbe805d,     0x697c93d0,     0x6fa92dd5,     0xcfb31225,     0xc83b99ac,     0x10a77d18,
	0xe86e639c,     0xdb7bbb3b,     0xcd097826,     0x6ef41859,     0xec01b79a,     0x83a89a4f,     0xe6656e95,     0xaa7ee6ff,     0x2108cfbc,     0xefe6e815,
	0xbad99be7,     0x4ace366f,     0xead4099f,     0x29d67cb0,     0x31afb2a4,     0x2a31233f,     0xc63094a5,     0x35c066a2,     0x7437bc4e,     0xfca6ca82,
	0xe0b0d090,     0x3315d8a7,     0xf14a9804,     0x41f7daec,     0x7f0e50cd,     0x172ff691,     0x768dd64d,     0x434db0ef,     0xcc544daa,     0xe4df0496,
	0x9ee3b5d1,     0x4c1b886a,     0xc1b81f2c,     0x467f5165,     0x9d04ea5e,     0x015d358c,     0xfa737487,     0xfb2e410b,     0xb35a1d67,     0x9252d2db,
	0xe9335610,     0x6d1347d6,     0x9a8c61d7,     0x377a0ca1,     0x598e14f8,     0xeb893c13,     0xceee27a9,     0xb735c961,     0xe1ede51c,     0x7a3cb147,
	0x9c59dfd2,     0x553f73f2,     0x1879ce14,     0x73bf37c7,     0x53eacdf7,     0x5f5baafd,     0xdf146f3d,     0x7886db44,     0xca81f3af,     0xb93ec468,
	0x382c3424,     0xc25f40a3,     0x1672c31d,     0xbc0c25e2,     0x288b493c,     0xff41950d,     0x397101a8,     0x08deb30c,     0xd89ce4b4,     0x6490c156,
	0x7b6184cb,     0xd570b632,     0x48745c6c,     0xd04257b8
};

#define Ui32(a0, a1, a2, a3) ((unsigned int)(a0) | ((unsigned int)(a1) << 8) | ((unsigned int)(a2) << 16) | ((unsigned int)(a3) << 24))
#define gb0(x) ( (x)          & 0xFF)
#define gb1(x) (((x) >> ( 8)) & 0xFF)
#define gb2(x) (((x) >> (16)) & 0xFF)
#define gb3(x) (((x) >> (24)) & 0xFF)

int aes::AesExpandEncryptKey(unsigned int *roundkey, const unsigned char* key, unsigned keySize)
{
	if (!roundkey || !key)
		return -1;
	if (keySize != 16 && keySize != 24 && keySize != 32)
		return -2;
	const unsigned Nr = (keySize / 4) + 6;
	const unsigned Nk = keySize / 4;
	const unsigned Nb = 4;
	const unsigned KeyCount = Nb * (Nr + 1);
	for (unsigned i = 0; i < Nk; ++i) {
		roundkey[i] = Ui32(key[i*4], key[1+i*4], key[2+i*4], key[3+i*4]);
	}
	for (unsigned i = Nk ; i < KeyCount; ++i) {
		unsigned int t = roundkey[i - 1];
		unsigned rem = i % Nk;
		if ((Nk == 8) && ( 0 == (i -4) % Nk)) {
			t = Ui32(h_Sbox[gb0(t)], h_Sbox[gb1(t)], h_Sbox[gb2(t)], h_Sbox[gb3(t)]);
		}
		if (0 == rem) {
			t = Ui32(h_Sbox[gb1(t)] ^ Rcon[i / Nk], h_Sbox[gb2(t)], h_Sbox[gb3(t)],
				h_Sbox[gb0(t)]);
		}
		roundkey[i] = roundkey[i - Nk] ^ t;
	}
	return 0;
}

int aes::AesExpandDecryptKey(unsigned int *roundkey, const unsigned char *key, unsigned keySize)
{
	int ret = aes::AesExpandEncryptKey(roundkey, key, keySize);
	if (0 != ret)
		return ret;
	const unsigned Nr = (keySize / 4) + 6;
	const unsigned Nb = 4;
	const unsigned keyCount = Nb * (Nr + 1);
	unsigned int temp;
	for (unsigned int i = 0, j = (Nb*Nr); i < j; i += Nb, j -= Nb) {
		temp = roundkey[i    ]; roundkey[i    ] = roundkey[j    ]; roundkey[j    ] = temp;
		temp = roundkey[i + 1]; roundkey[i + 1] = roundkey[j + 1]; roundkey[j + 1] = temp;
		temp = roundkey[i + 2]; roundkey[i + 2] = roundkey[j + 2]; roundkey[j + 2] = temp;
		temp = roundkey[i + 3]; roundkey[i + 3] = roundkey[j + 3]; roundkey[j + 3] = temp;
	}
	for (unsigned i = 4; i < keyCount - 4; ++i) {
		unsigned int temp = roundkey[i];
		roundkey[i] =
			DecryptT[h_Sbox[gb0(temp)]] ^
			DecryptT[h_Sbox[gb1(temp)] + 256] ^
			DecryptT[h_Sbox[gb2(temp)] + 512] ^
			DecryptT[h_Sbox[gb3(temp)] + 768];
	}
	return 0;
}